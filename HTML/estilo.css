selector{
    propiedad:valor;
}

*{ /* Este selector se alica a todas todas las cosas que haya en el html.  */
    color: rgb(9, 5, 79);
    padding: 0px;
    margin: 0px;
}

h1{ /* Este selector selecciona todos los h1 que haya en el html. */
    color: chartreuse;
}

.titulo-h2{ /*Con esto estamos cambiando todo los elementos que tengan la clase titulo-h2 */
    color: blueviolet;
}

#id-elemento{ /* Esto es para cambiar un elemento unico. */
    color: orangered;
}
[rancio="sii"]{
    color: black;
}

h2 p { /* Aqui estamos seleccionando todos los elementos p que estan dentro de un h2 */

}

b :hover{ /* Esto es una pseudo clase*/
    color: goldenrod;
}


/* h1 class="color-red" id="color-blue" style="color:green" !important   */ /*  Esto es la jerarquia  creo que se le dice especificidad.     */  


.form__input:first-child{ /* Con metolodogia bem cambiar el primer input de color */
    color:aquamarine;
}

.form__input--active{ /* Con metolodogia bem cambiar el un especifico input de color */  /* Usamos los -- para decir que es un elemento bastante diferente del resto   */
    color:aquamarine;
}

.contact-form {
    font-size: 25px;
    background-color: black;
    width: 100vw; /* viewport-widht   Esto indica que tendra el lardo de toda la pantalla (100 significa el 100% de la pantalla )*/
    height: 50vh; /* viewport-height   esto significa que tendra el ancho de toda la pantalla (50 significa que el 50% de la pantalla)  */      /* estas son medidas relativas. */
}

.contact-form__p-h2{
    font-size: 5em; /* para los tamaños podemos usar px-pixeles, cm-- centimetros, pt--puntos, mm-milimentros,  em -- 16 pixeles (esta es una medida relativa), otra medida es el porcentaje pero se basa en la caja donde se encuentra. */
    font-family: 'Kolker Brush', cursive;  /* Tipo de letra */  /* la coma representa que si no encontramos el primer elemento nos pasamos con el segundo*/
    line-height: 1; /* Esto significa el espacio donde se encuentran las letras. */
    font-weight: normal;  /* Creo que esto es para cambiart el grosor de la letra. */
    font-stretch: normal;
    font-variant: small-caps;
}

/* h2{
    display: inline;                Esto es para cambiar los h2 y que no ocupen toda la linea. Que se comporten como un <b>
} */

header{
    /* background-color: aqua; */
    /*El padding es la distancia que hay entre el texto y la caja. */
    /*El margin es la distancia que hay entre dos cajas. */
}

#h2-delaside{
    background-color: red;
    display: inline-block;
    padding: 100px;
    box-sizing: border-box;
    text-align: center;
    margin: 20px 10px;
    border-radius: 2em;
    border: 10px solid blue;
    box-shadow: 2px 4px 15px 10px #000;
    text-shadow: 2px 2px 7px #fff;
    transform: rotate(0deg); /* Esto es para cambiar la posicion. En esta caso estamos rotando el h2*/
}


.caja1{
    width: 200px;
    height: 200px;
    background: rebeccapurple;
    margin: auto;
    outline: 10px solid blue;  /*Este es como un border pero no ocupa espacio en la pantalla. en otras palabras no mueve los otros objetos.  */
}

.caja2{
    width: 200px;
    height: 200px;
    background: yellow;
    margin: auto;
    z-index: 1; /*Esto representa que va a sobreponer la caja. La puede poner sobre otras cajas o las puede poner detras de otras cajas. */  /* pero tiene un conflicto en tra padres e hijos.*/
   
}

.caja3{
    background-color: chocolate;
    position: relative; /*Con esto podemos ver la caja pero su posicion estara en el mismo lugar*/
    top: 10px;   /* Top y lesft son los mas importantes en terminos de posicion. */
    left: 20px;
    width: 200;
    height: 200;
    margin: auto;
    opacity: .5; /*Para darle una caracteristica de transparencia.  */
}

.caja4{
    background-color: blue;
    width: 200;
    height: 200;
    margin: auto;
    position: absolute; /*Es muy muy arecido al "relative" pero con dos diferencias */ /*El espacio ya no esta mas reservado */
}

.cajaPadre{
    width: 400;
    height: 400;
    background-color: blanchedalmond;
    margin: 40px;
    position: relative;  /* Si le damos posicion a la caja padre todo lo que esta adentro del padre lo tendran los hijos. */
    z-index: 100; /*La caja padre casi siempre tendra menos z-index */  /* Tenemos que quitar esta propiedad para que la hijo este por debajo del padre*/
}

.cajaHijo{
    width: 100;
    height: 100;
    background-color: green;
    margin: 20px;
    position: relative;
    z-index: -1; /* Para que el hijo pueda tener menor z-index que el padre necesitamos poner numeros negativos y al padre tenemos que quitarle la atrivuto "z-index" */
    top: -60px;
    left:-40px;
}

.class-fixed{
    background-color: grey;
    position: fixed; /* Esto hace que se quede la caja en un solo lugar incluso si bajamos o movemosla pantalla. como si fueran anuncios. */
    width: 400;
    height: 400;
    left: 500px;
    opacity: 1;
    font-size: 40px;
    color: #000;
    transition: background 1s, height 1s, width 1s;  /* Esto es modificar el tiempo en el que se tarda para cambiar cuando apliquemos el hover. Tamboen podemos poner "all 1s"  */
}


/*  Display

    block   -- ocupan toda la pantalla 
    inline  -- ocupan solo el tamaño del texto 

    inline-block  -- podemos modificar las dimenciones de la caja 
    table   -- una tabla
    inline-table
    list-time   -- las listas
    table-cell -- se comporta como un cuadrito de una tabla
    table-row   -- toda la fila de una table. 
    table-column  -- toda la columna de una table 

    grid
    flex

    inline-flex
    inline-grid

*/


/* Overflow
    Esto es para modificar los que sobresale de la pantalla. Lo que sobra. 


    auto -- nos da la posibiilidad de que podamos scrollear dentro de la caja donde se encuentra 
    scroll -- a la fuerza pone la barrita de scroll aunque no sea necesario. 



*/

/* pseudo-elemnto     -- Se aplican a los elementos.

    ::fisrt-line  --> No funciona en elementos de inline     --> siempre la priemra line. no importa si va cambiando el tamaño
    ::first-letter   --> Modificara la primera letra. 
    ::placeholder    ---> esto es lo que esta adentro de los botones. o cuando eintrooducimos texto en algun input.  Cuando agregemos algo se va 
    ::selection    --> esto es para cuando seleccionemos algo. cambiara el color de la letra y a vecez tambien el fondo de la letra. 

    ::after --> estamos creando un hijo   --> hijos - content(necesario) - inline 



*/
.class-fixed::first-line{
    color: blue;
}

.class-fixed::first-letter{
    font-size: 80px;
    color: green
    
}



.parrafo::before{  /* NO se puede seleccionar */
    content: "Apenas estoy aprendiendo. ";
    color: aqua;
}


/*Pseudo Clases
:hover
:link  --  lo usamos para marcar un enlace que no esta visitado aun. Cuando existen los enlaces.    
:active -- Habra cambios solo cuando tengamos apachurrado el mouse en el objeto. 
:focus -- Solo sirve en los inputs. Cambiara como un "active" pero solo con los inputs. 

*/

.class-fixed:hover{
    background-color: rgb(99, 175, 141);
    width: 300;
    height: 300;
}



/* Object-Fit   -- esto es para imagnees. 

contain -- la imagen se ajusta a la resolucion real. 
cover -- la imagen se ajusta al contenedor y recorda parte de la imagen para ajustarse al tamaño
none -- poner la resoluciones reales. 
scale-down -- Que es mas pequeño none o contain. Y se queda con la mejor. 
oject-poistion  -- top o bottom para cambiarle la posicion a la imagen
*/


/*
cursor -- cambiara la forma del cursor cuando este sobre la caja o el objeto que seleccionemos. 

*/

/*  Colores

 */

@media only screen and (max-width:400px) { /* Cuando la pagina llega menor de los 800px ocurrira lo que esta adentro de esto */

    div{
        display: block;
        width: 100%;
    }
    
}





/* Haciendo un menu responsivo*/

nav{
    background-color: rgb(19, 54, 113);
    /* display: inline-block; */
}
nav li{
    display: inline-block;
    padding: 10px;
}


/* Flex box
Se ajusta al contenido 
En base al contenido mantener la altura. 


*/

.flex-container{
    display: flex;
    
}

.flex-item{
    color: #fff;
    padding: 10px;
    margin: 10px;
    background-color: blue;
}


.flex-container2{
    display: flex;
    /* flex-direction: column;  Esto es para cambiar la direcion del main axis. */
    /* flex-wrap: wrap; Esto hace que mis cajitas se pasen para abajo y que no cambien el tamaño de las cajas. */
    flex-flow: row wrap; /* Esta line de codigo es para abreviar las dos lines de codigo de arriba. */
    justify-content: center; /* Esta linea de codigo es para acomodar el contenido de la cada. "center = centrara lo que haya adentro." "space-around = es lo mismo que pasa con el margin: auto;" */
                             /* space-between = quiere que las cajas esten separadas por el mismo espacio lo mas que se pueda. */
    /* align-items: center;  Center lo pone en medio de nuestra pagina en medio de todo. ||   flex-end  lo poner hasta el final.  || baseline lo pone hasta arriba  || stretch lo estira desde arriba hasta abajo  align-content sirve cuando solo tenemos una line sino pueden pasar cosas raras     NO MALAS  */
    align-content: center; /* Esto lo usamos cuando hay varias lineas ( cuando hay varias cajas que froman mas de una fila ) */
    height: 100vh;
}

.flex-item2{
    color: #fff;
    margin: 10px;
    background-color: rgb(0, 255, 4);
    height: 120px;
    width: 120px;
}